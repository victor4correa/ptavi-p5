Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 8.0.1 - 6.11.2017

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
	954 paquetes
* ¿Cuánto tiempo dura la captura?
	56,149 segundos
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
	192.168.1.34 que es una IP privada ya que empieza por 192.168.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics. En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
	Es mayor el porcentaje de paquetes UDP que tiene sentido tratandose de una aplicacion en tiempo real que sabemos que funcionan sobre el protocolo UDP.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
	Tenemos protocolos DNS, UDP, TCP, HTTP, STUN, SIP, RTP, SDP, ARP y ICMP. De ellos son señal los paquetes SIP y RTP, quedando todo lo demas como ruido.

4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
	25 paquetes SIP que se envian en los siguientes tramos entre 7-8 segundos, 14-18 segundos, 37-41 segundos y 54-56 segundos de la captura
* Y los paquetes con RTP, ¿cuándo se envı́an?
	Se envian entre los 17-39 segundos teniendo su pico en el segundo 27.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
	Servicio DNS
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
	80.59.61.250
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
	86.64.162.35
6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
	ekiga.net/ip/
* ¿Qué user agent (UA) la está pidiendo?
	Ekiga\r\n
* ¿Qué devuelve el servidor?
	83.36.48.212
* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
	Nos devuelve una IP en mi caso 193.147.77.73 que es nuestra ip privada mientras que el servidor captura la ip publica.

7. Hasta la trama 45 se puede observar una secuencia de tramas del
protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
	Para conocer la ip publica del cliente asi como el tipo y puerto NAT que se debe usar para establecer la llamada VOIP.
* ¿Podrı́as decir si estamos tras un NAT o no?
	Al utilizar el protocolo STUN sabemos que estamos detras de un NAT.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en
un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para
localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
	86.64.162.35
* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes
SIP?
	5060
* ¿Qué método SIP utiliza el UA para registrarse?
	REGISTER
* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
	INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
	No.
* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
	Debido a que el siguiente paquete SIP recibe un 401 unauthorized
* ¿Podrı́as identificar las diferencias entre el primer intento y el
segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
	En el segundo intento añadimos el campo Authorization donde añadimos el "nonce" que nos vino en la respuesta SIP del 401.
* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
	3600 segundos.

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar
con el servicio de eco de Ekiga que nos permite comprobar si nos
hemos conectado correctamente. El servicio de eco tiene la dirección
sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
	Si en el campo SIP address
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
	Esta en formato SDP y contiene las cabeceras "sesion","Id Session", "Connection Information","Time Descrption", "Media Descrption" y los "Media Attributes"
* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
	No ya que recibe como respuesta un 407 requiriendo una autenticacion de proxy
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
	En este INVITE se añade la cabecera Proxy Authorization donde va el "nonce" que fue recibido en el mensaje 407 de respuesta. Esta cabecera se añade para superar un control de seguridad proxy.

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
	Se utiliza el protocolo RTP y H.261. En los paquetes H.261 se transporta el video de la llamada mientras que en los paquetes RTP se transporta el audio siempre en paquetes de 214 bytes.
* ¿Cuál es el tamaño de paquete de los mismos?
	Los de audio (RTP) 214 bytes mientras que los de video (H.261) varian de tamaño en funcion del video que se transporte.
* ¿Se utilizan bits de padding?
	No.
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
	En los paquetes RTP la periodicidad es de 160 segundos mientras que los H.261 tienen una periodicidad de 3600 segundos
* ¿Cuántos bits/segundo se envı́an?
	64 Kbps
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
	Hay dos flujos debido a que uno se corresponde con los paquetes de audio y otro a los de video.
* ¿Cuántos paquetes se pierden?
	Ninguno
* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
	1290 milisegundos y este valor es la diferencia de tiempo desde que se recibió el ultimo paquete y se recibe el siguiente
* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?
	En los paquetes de audio el jitter medio es 42,5 ms y el maximo 119,63 ms, mientras que en los paquetes de video el jitter medio es 153,24 ms y el maximo 183,095 ms.
	Tenemos un jitter y delta alto por lo que la conversacion no será de calidad.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
	En el primer paquete de audio ambos valores estan a 0.
* ¿Podemos saber si éste es el primer paquete que nos han enviado?
	Si, mirando su delta y jitter que estarán con valor 0 si es el primero.
* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
	Hasta el paquete 247 donde el valor de jitter es 38.82 ms
* ¿A qué se debe el cambio tan brusco del jitter?
	Se debe a que tenemos una bajada considerable de ancho de banda que hará que tarden mas en llegar los paquetes.
* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
	Es mucho mas grande el cambio que sufre la delta que pasa de 24 a 554,74 ms, mientras que el jitter pasa de 5.76 a 38.82 ms

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?
	25 segundos.
* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
	Hay 2 SSRC, 0x43306582 correspondiente a los paquetes de video y el 0xBF4AFD37 correspondiente a los paquetes de audio. No hay CSRCs
15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
	Utiliza el metodo BYE
* ¿En qué trama(s)?
	En la 924, 925, 927 y 933
* ¿Por qué crees que se envı́a varias veces?
	Para cerrar la conversacion lo antes posible.
16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
	Para dar de baja al usuario en el servidor de nombres ya que el campo expires va a 0.
* ¿En qué trama sucede esto?
	En la tramas 950 hace la primera peticion pero al necesitar autorizacion requiere de una trama mas para darse de baja que es la 952.
* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
	La diferencia esta que en el campo expires ponemos el valor 0 que indica la solicitud de dar de baja al usuario.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web http://www.ekiga.net con el navegador y créate
una cuenta. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

18. Captura una sesión SIP de una conversación con el número SIP sip:500@ekigan.net.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso3 .

19. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior4 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
* ¿Son diferentes el registro y la descripción de la sesión?

20. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
* ¿Cuál es su periodicidad?
* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?
* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el
buffer de jitter, la conversación puede no tener la calidad necesaria.
* ¿Sabrı́as decir qué tipo de servicio ofrece sip:500@ekiga.net?
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

